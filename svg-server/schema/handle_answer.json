{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "HandleAnswer",
  "description": "Responses from handle functions",
  "anyOf": [
    {
      "description": "response from creating a viewing key",
      "type": "object",
      "required": [
        "viewing_key"
      ],
      "properties": {
        "viewing_key": {
          "type": "object",
          "required": [
            "key"
          ],
          "properties": {
            "key": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "description": "response from adding/removing admins",
      "type": "object",
      "required": [
        "admins_list"
      ],
      "properties": {
        "admins_list": {
          "type": "object",
          "required": [
            "admins"
          ],
          "properties": {
            "admins": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HumanAddr"
              }
            }
          }
        }
      }
    },
    {
      "description": "response from adding/removing viewers",
      "type": "object",
      "required": [
        "viewers_list"
      ],
      "properties": {
        "viewers_list": {
          "type": "object",
          "required": [
            "viewers"
          ],
          "properties": {
            "viewers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HumanAddr"
              }
            }
          }
        }
      }
    },
    {
      "description": "response from adding/removing minters",
      "type": "object",
      "required": [
        "minters_list"
      ],
      "properties": {
        "minters_list": {
          "type": "object",
          "required": [
            "minters"
          ],
          "properties": {
            "minters": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HumanAddr"
              }
            }
          }
        }
      }
    },
    {
      "description": "response from adding new trait categories",
      "type": "object",
      "required": [
        "add_categories"
      ],
      "properties": {
        "add_categories": {
          "type": "object",
          "required": [
            "count"
          ],
          "properties": {
            "count": {
              "description": "number of categories",
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        }
      }
    },
    {
      "description": "response from adding new trait variants",
      "type": "object",
      "required": [
        "add_variants"
      ],
      "properties": {
        "add_variants": {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "status": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "description": "response from modifying a trait category",
      "type": "object",
      "required": [
        "modify_category"
      ],
      "properties": {
        "modify_category": {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "status": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "description": "response from modifying existing trait variants",
      "type": "object",
      "required": [
        "modify_variants"
      ],
      "properties": {
        "modify_variants": {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "status": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "description": "response from setting common metadata",
      "type": "object",
      "required": [
        "set_metadata"
      ],
      "properties": {
        "set_metadata": {
          "type": "object",
          "required": [
            "metadata"
          ],
          "properties": {
            "metadata": {
              "$ref": "#/definitions/CommonMetadata"
            }
          }
        }
      }
    },
    {
      "description": "response from setting the roll config",
      "type": "object",
      "required": [
        "set_roll_config"
      ],
      "properties": {
        "set_roll_config": {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "status": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "description": "response from adding dependencies",
      "type": "object",
      "required": [
        "add_dependencies"
      ],
      "properties": {
        "add_dependencies": {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "status": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "description": "response from removing dependencies",
      "type": "object",
      "required": [
        "remove_dependencies"
      ],
      "properties": {
        "remove_dependencies": {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "status": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "description": "response from modifying dependencies",
      "type": "object",
      "required": [
        "modify_dependencies"
      ],
      "properties": {
        "modify_dependencies": {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "status": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "description": "response from adding trait hiders",
      "type": "object",
      "required": [
        "add_hiders"
      ],
      "properties": {
        "add_hiders": {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "status": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "description": "response from removing trait hiders",
      "type": "object",
      "required": [
        "remove_hiders"
      ],
      "properties": {
        "remove_hiders": {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "status": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "description": "response from modifying trait hiders",
      "type": "object",
      "required": [
        "modify_hiders"
      ],
      "properties": {
        "modify_hiders": {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "status": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "description": "response from revoking a permit",
      "type": "object",
      "required": [
        "revoke_permit"
      ],
      "properties": {
        "revoke_permit": {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "status": {
              "type": "string"
            }
          }
        }
      }
    }
  ],
  "definitions": {
    "Authentication": {
      "description": "media file authentication",
      "type": "object",
      "properties": {
        "key": {
          "description": "either a decryption key for encrypted files or a password for basic authentication",
          "type": [
            "string",
            "null"
          ]
        },
        "user": {
          "description": "username used in basic authentication",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "CommonMetadata": {
      "description": "the metadata common to all NFTs",
      "type": "object",
      "properties": {
        "private": {
          "description": "common privae metadata",
          "anyOf": [
            {
              "$ref": "#/definitions/Metadata"
            },
            {
              "type": "null"
            }
          ]
        },
        "public": {
          "description": "common public metadata",
          "anyOf": [
            {
              "$ref": "#/definitions/Metadata"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "Extension": {
      "description": "metadata extension You can add any metadata fields you need here.  These fields are based on https://docs.opensea.io/docs/metadata-standards and are the metadata fields that Stashh uses for robust NFT display.  Urls should be prefixed with `http://`, `https://`, `ipfs://`, or `ar://`",
      "type": "object",
      "properties": {
        "animation_url": {
          "description": "url to a multimedia attachment",
          "type": [
            "string",
            "null"
          ]
        },
        "attributes": {
          "description": "item attributes",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Trait"
          }
        },
        "background_color": {
          "description": "background color represented as a six-character hexadecimal without a pre-pended #",
          "type": [
            "string",
            "null"
          ]
        },
        "description": {
          "description": "item description",
          "type": [
            "string",
            "null"
          ]
        },
        "external_url": {
          "description": "url to allow users to view the item on your site",
          "type": [
            "string",
            "null"
          ]
        },
        "image": {
          "description": "url to the image",
          "type": [
            "string",
            "null"
          ]
        },
        "image_data": {
          "description": "raw SVG image data (not recommended). Only use this if you're not including the image parameter",
          "type": [
            "string",
            "null"
          ]
        },
        "media": {
          "description": "media files as specified on Stashh that allows for basic authenticatiion and decryption keys. Most of the above is used for bridging public eth NFT metadata easily, whereas `media` will be used when minting NFTs on Stashh",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/MediaFile"
          }
        },
        "name": {
          "description": "name of the item",
          "type": [
            "string",
            "null"
          ]
        },
        "protected_attributes": {
          "description": "a select list of trait_types that are in the private metadata.  This will only ever be used in public metadata",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "youtube_url": {
          "description": "url to a YouTube video",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "HumanAddr": {
      "type": "string"
    },
    "MediaFile": {
      "description": "media file",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "authentication": {
          "description": "authentication information",
          "anyOf": [
            {
              "$ref": "#/definitions/Authentication"
            },
            {
              "type": "null"
            }
          ]
        },
        "extension": {
          "description": "file extension",
          "type": [
            "string",
            "null"
          ]
        },
        "file_type": {
          "description": "file type Stashh currently uses: \"image\", \"video\", \"audio\", \"text\", \"font\", \"application\"",
          "type": [
            "string",
            "null"
          ]
        },
        "url": {
          "description": "url to the file.  Urls should be prefixed with `http://`, `https://`, `ipfs://`, or `ar://`",
          "type": "string"
        }
      }
    },
    "Metadata": {
      "description": "token metadata",
      "type": "object",
      "properties": {
        "extension": {
          "description": "optional on-chain metadata.  Only use this if you are not using `token_uri`",
          "anyOf": [
            {
              "$ref": "#/definitions/Extension"
            },
            {
              "type": "null"
            }
          ]
        },
        "token_uri": {
          "description": "optional uri for off-chain metadata.  This should be prefixed with `http://`, `https://`, `ipfs://`, or `ar://`.  Only use this if you are not using `extension`",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "Trait": {
      "description": "attribute trait",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "display_type": {
          "description": "indicates how a trait should be displayed",
          "type": [
            "string",
            "null"
          ]
        },
        "max_value": {
          "description": "optional max value for numerical traits",
          "type": [
            "string",
            "null"
          ]
        },
        "trait_type": {
          "description": "name of the trait",
          "type": [
            "string",
            "null"
          ]
        },
        "value": {
          "description": "trait value",
          "type": "string"
        }
      }
    }
  }
}
